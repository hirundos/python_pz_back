name: CI-CD WAS

on:
  push:
    paths:
      - "services/**"
      - ".github/workflows/was.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [login, menu, order]

    steps:
      # 1. yq 설치 (values.yaml 편집용)
      - name: Install yq
        run: |
          sudo wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      # 2. Checkout 소스
      - name: Checkout source
        uses: actions/checkout@v4

      # 3. Docker Buildx 세팅
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. GCP 서비스 계정 키 복호화
      - name: Decode GCP service account key
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > key.json || {
            echo "❌ [ERROR] GCP 서비스 계정 키 복호화 실패"; exit 1;
          }

      # 5. gcloud CLI 설치 및 인증
      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # 6. GCR 로그인
      - name: Login to GCR
        run: |
          gcloud auth activate-service-account --key-file=key.json || {
            echo "❌ [ERROR] GCP 인증 실패"; exit 1;
          }
          gcloud auth configure-docker asia-northeast3-docker.pkg.dev || {
            echo "❌ [ERROR] GCR Docker 로그인 실패"; exit 1;
          }

      # 7. 최신 태그 조회 후 새 태그 생성
      - name: Get latest GCR image tag
        id: get_latest
        run: |
          DATE=$(date +%Y%m%d)

          echo "ℹ️ 최신 태그 조회 중..."
          LTAG=$(gcloud artifacts docker tags list "asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ay-repo/${{ matrix.service }}" \
            --format="value(tag)" --sort-by="~tag" --limit=1 ) || true

          if [[ -z "$LTAG" ]]; then
            echo "⚠️ [WARNING] 기존 태그 없음, 기본값 사용"
            TAG="20250925-1.0.0"
          else
            echo "✅ Latest Tag Found: $LTAG"
            TAG="$LTAG"
          fi

          SEMVER=$(echo "$TAG" | sed -E 's/^[0-9]+-//')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$SEMVER"
          MAJOR=${MAJOR:-0}
          MINOR=${MINOR:-0}
          PATCH=${PATCH:-0}
          NEXT_PATCH=$((PATCH + 1))
          NEW_SEMVER="${MAJOR}.${MINOR}.${NEXT_PATCH}"
          IMAGE_TAG="${DATE}-${NEW_SEMVER}"

          echo "🆕 New Image Tag: $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 8. Docker Build & Push
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          file: ./services/${{ matrix.service }}/Dockerfile
          push: true
          tags: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ay-repo/${{ matrix.service }}:${{ env.IMAGE_TAG }}

      # 9. CD repo 업데이트 (values.yaml 이미지 태그 교체)
      - name: Update image tag in CD repo
        run: |
          set -e
          echo "ℹ️ CD repo 업데이트 시작..."

          git clone https://x-access-token:${{ secrets.CD_REPO_TOKEN }}@github.com/hirundos/pizza_cd.git || {
            echo "❌ [ERROR] Git clone 실패"; exit 1;
          }

          cd pizza_cd/${{ matrix.service }}
          export NEW_TAG="${{ env.IMAGE_TAG }}"
          export SERVICE_NAME="${{ matrix.service }}"

          # tag 교체
          yq e '.image.tag = strenv(NEW_TAG)' -i values.yaml
          # name 교체 (서비스 이름 보장)
          yq e '.image.name = strenv(SERVICE_NAME)' -i values.yaml

          git config user.name "CI Bot"
          git config user.email "ci-bot@example.com"
          git add values.yaml
          git commit -m "Update $SERVICE_NAME image to ${NEW_TAG}" || echo "ℹ️ No changes to commit"
          git push || {
            echo "❌ [ERROR] Git push 실패"; exit 1;
          }

          echo "✅ CD repo 업데이트 완료"